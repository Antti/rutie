language: rust

os:
- linux
- osx

rust:
  - stable
  - beta
  - nightly

cache:
  directories:
    - /home/travis/.cargo

before_cache:
  - rm -rf /home/travis/.cargo/registry

matrix:
  allow_failures:
    - rust: beta
    - rust: nightly

before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then rvm reinstall --disable-binary "$BUILD_RUBY_VERSION"; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm install "$BUILD_RUBY_VERSION"; fi
- rvm use "$BUILD_RUBY_VERSION"
- ruby --version
- ruby -e 'require "pp"; pp RbConfig::CONFIG'
- rustc -Vv
- cargo -Vv
- mkdir -p target/debug/deps
- cp $(ruby -e 'puts File.join(RbConfig::CONFIG["libdir"], RbConfig::CONFIG["LIBRUBY_ALIASES"].split(" ").first)') target/debug/deps

before_script:
- export PATH=$HOME/.cargo/bin:$HOME/.local/bin:$PATH

script:
- |
  cargo build -vv &&
  cargo test -vv

after_script:
- cat target/debug/build/rutie-*/output
- cat target/debug/build/rutie-*/stderr

env:
  global:
    - RUST_BACKTRACE=full
    - CI_STDERR_LOG=true
  matrix:
    - BUILD_RUBY_VERSION: 2.3.7
    - BUILD_RUBY_VERSION: 2.4.4
    - BUILD_RUBY_VERSION: 2.5.1
